service: JavaHelp

frameworkVersion: '3'

provider:
  name: aws
  runtime: java8

  region: us-east-1

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
          Resource: 'arn:aws:dynamodb:us-east-1:*:*'

package:
  artifact: backend/build/distributions/function-package.zip

functions:
  login:
    handler: com.javahelp.backend.endpoint.user.LoginHandler
    timeout: 20
    events:
      - httpApi:
          path: /login
          method: post

  salt:
    handler: com.javahelp.backend.endpoint.user.SaltHandler
    timeout: 20
    events:
      - httpApi:
          path: /users/salt
          method: get

  saltByID:
    handler: com.javahelp.backend.endpoint.user.SaltHandler
    timeout: 20
    events:
      - httpApi:
          path: /users/{userid}/salt
          method: get

  deleteUser:
    handler: com.javahelp.backend.endpoint.user.DeleteHandler
    timeout: 20
    events:
      - httpApi:
          path: /users/{userid}
          method: delete

  readUser:
    handler: com.javahelp.backend.endpoint.user.ReadHandler
    timeout: 20
    events:
      - httpApi:
          path: /users/{userid}
          method: get

  search:
    handler: com.javahelp.backend.endpoint.search.SearchHandler
    timeout: 20
    events:
      - httpApi:
          path: /providers/search
          method: post

  register:
    handler: com.javahelp.backend.endpoint.user.RegisterHandler
    events:
      - httpApi:
          path: /register/user
          method: post

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - httpApi:
#          path: /users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    javahelpBackendUsers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: javahelpBackendUsers
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    javahelpBackendTokens:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: javahelpBackendTokens
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    javahelpBackendSurveys:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: javahelpBackendSurveys
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    javahelpBackendFilledSurveys:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: javahelpBackendFilledSurveys
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
